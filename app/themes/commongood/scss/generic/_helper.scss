/*------------------------------------*\
	$HELPER
\*------------------------------------*/
/**
 * A series of helper classes to use arbitrarily. Only use a helper class if an
 * element/component doesnâ€™t already have a class to which you could apply this
 * styling, e.g. if you need to float `.main-nav` left then add `float:left;` to
 * that ruleset as opposed to adding the `.float--left` class to the markup.
 *
 * A lot of these classes carry `!important` as you will always want them to win
 * out over other selectors.
 */


/**
 * Positions
 */

.relative {
	position:relative !important;
}

.centered--v{
	position:absolute;
	top:50%;
	@include transform(translateY(-50%));
}

.centered--v--h{
	position:absolute;
	top:50%;
	left:50%;
	@include transform(translate(-50%, -50%));
}



/**
 * Softness
 */

.soft-half-double--top {
	padding-top:$base-spacing-unit * 1.5;
}
.soft-half-double--bottom {
	padding-bottom:$base-spacing-unit * 1.5;
}
.soft-half-double--ends {
	padding-top:$base-spacing-unit * 1.5;
	padding-bottom:$base-spacing-unit * 1.5;
}
.soft-double--top {
	padding-top:$base-spacing-unit * 2;
}
.soft-double--bottom {
	padding-bottom:$base-spacing-unit * 2;
}
.soft-double--ends {
	padding-top:$base-spacing-unit * 2;
	padding-bottom:$base-spacing-unit * 2;
}



.soft-inside-sides--one-twelfth {
  padding-left:8.333% !important;
  padding-right:8.333% !important;
}


/**
 *  Text Alignment Helpers
 */

@if $responsive{
	@each $state in palm, lap, lap-and-up, portable, desk, desk-wide{
		@include media-query(#{$state}){
			.text--center--#{$state} {
				text-align: center !important;
			}
			.text--left--#{$state} {
				text-align: left !important;
			}
			.text--right--#{$state} {
				text-align: right !important;
			}
		}
	}
}




